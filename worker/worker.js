var a=class extends Error{constructor(r,t){super(r,t),Object.setPrototypeOf(this,new.target.prototype)}};var s=class extends a{parameter;constructor(r){super(`Uncaught MissingURLParameterKeyError: Missing key for parameter "${r}"`),this.parameter=r}};var o=class extends a{parameter;constructor(r){super(`Uncaught MissingURLParameterValueError: Missing value for parameter "${r}"`),this.parameter=r}};function p(e){let r="records",t=e.searchParams.has(r),u=e.searchParams.getAll(r),R=[];if(t)throw new s(r);if(u.length)throw new o(r);return u.forEach((g,m)=>{let n=JSON.parse(g);if(!n.type)throw new o(`${r}[${m}].type`);if(!n.content)throw new o(`${r}[${m}].content`);if(!n.name)throw new o(`${r}[${m}].name`);R.push({...n,type:n.type,content:n.content,name:n.name})}),R}function c(e){let r="token",t=e.searchParams.get(r);if(t===null)throw new s(r);if(t==="")throw new o(r);return t}function f(e){let r="zoneId",t=e.searchParams.get(r);if(t===null)throw new s(r);if(t==="")throw new o(r);return t}function i(e){return{token:c(e),zoneId:f(e),records:p(e)}}var V={async fetch(e){let r=new URL(e.url),t=i(r)}};export{V as default};
